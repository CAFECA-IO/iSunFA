import { IAPIConfig, IAPIInput, IAPIName, IAPIOutput } from '@/interfaces/api_connection';

const apiVersion = 'v1';
const apiPrefix = `/api/${apiVersion}`;

const apiVersionV2 = 'v2';
const apiPrefixV2 = `/api/${apiVersionV2}`;

const initialInput: IAPIInput = {
  header: {},
  body: {},
  params: {},
  query: {},
};

export enum HttpMethod {
  GET = 'GET',
  POST = 'POST',
  PUT = 'PUT',
  DELETE = 'DELETE',
  PATCH = 'PATCH',
  HEAD = 'HEAD',
}

export enum APIName {
  AGREE_TO_TERMS = 'AGREE_TO_TERMS',
  CREATE_CHALLENGE = 'CREATE_CHALLENGE',
  SIGN_UP = 'SIGN_UP',
  SIGN_IN = 'SIGN_IN',
  SIGN_OUT = 'SIGN_OUT',
  EMAIL = 'EMAIL',
  USER_GET_BY_ID = 'USER_GET_BY_ID',
  USER_UPDATE = 'USER_UPDATE',
  USER_PENDING_TASK_GET = 'USER_PENDING_TASK_GET',
  COMPANY_PENDING_TASK_GET = 'COMPANY_PENDING_TASK_GET',
  COMPANY_ADD = 'COMPANY_ADD',
  COMPANY_GET = 'COMPANY_GET',
  COMPANY_ADD_BY_INVITATION_CODE = 'COMPANY_ADD_BY_INVITATION_CODE',
  COMPANY_SELECT = 'COMPANY_SELECT',
  COMPANY_SETTING_GET = 'COMPANY_SETTING_GET',
  COMPANY_SETTING_UPDATE = 'COMPANY_SETTING_UPDATE',
  CERTIFICATE_LIST_V2 = 'CERTIFICATE_LIST_V2',
  CERTIFICATE_GET_V2 = 'CERTIFICATE_GET_V2',
  CERTIFICATE_POST_V2 = 'CERTIFICATE_POST_V2',
  CERTIFICATE_PUT_V2 = 'CERTIFICATE_PUT_V2',
  CERTIFICATE_DELETE_V2 = 'CERTIFICATE_DELETE_V2',
  CERTIFICATE_DELETE__MULTIPLE_V2 = 'CERTIFICATE_DELETE__MULTIPLE_V2',
  COUNTERPARTY_LIST = 'COUNTERPARTY_LIST',
  COUNTERPARTY_GET_BY_ID = 'COUNTERPARTY_GET_BY_ID',
  COUNTERPARTY_ADD = 'COUNTERPARTY_ADD',
  COUNTERPARTY_UPDATE = 'COUNTERPARTY_UPDATE',
  COUNTERPARTY_DELETE = 'COUNTERPARTY_DELETE',
  PROFIT_GET_INSIGHT = 'PROFIT_GET_INSIGHT',
  INCOME_EXPENSE_GET_TREND_IN_PERIOD = 'INCOME_EXPENSE_GET_TREND_IN_PERIOD',
  LABOR_COST_CHART = 'LABOR_COST_CHART',
  PROFIT_GET_TREND_IN_PERIOD = 'PROFIT_GET_TREND_IN_PERIOD',
  PROJECT_LIST_PROGRESS = 'PROJECT_LIST_PROGRESS',
  PROJECT_LIST_PROFIT_COMPARISON = 'PROJECT_LIST_PROFIT_COMPARISON',
  ASSET_MANAGEMENT_LIST = 'ASSET_MANAGEMENT_LIST',
  ASSET_MANAGEMENT_ADD = 'ASSET_MANAGEMENT_ADD',
  ASSET_MANAGEMENT_GET_BY_ID = 'ASSET_MANAGEMENT_GET_BY_ID',
  ASSET_MANAGEMENT_UPDATE = 'ASSET_MANAGEMENT_UPDATE',
  OCR_UPLOAD = 'OCR_UPLOAD',
  OCR_DELETE = 'OCR_DELETE',
  OCR_RESULT_GET_BY_ID = 'OCR_RESULT_GET_BY_ID',
  OCR_LIST = 'OCR_LIST',
  INVOICE_CREATE = 'INVOICE_CREATE',
  INVOICE_UPDATE = 'INVOICE_UPDATE',
  INVOICE_GET_BY_ID = 'INVOICE_GET_BY_ID',
  ASK_AI_STATUS = 'ASK_AI_STATUS',
  ASK_AI_RESULT = 'ASK_AI_RESULT',
  ASK_AI_V2 = 'ASK_AI_V2',
  ASK_AI_RESULT_V2 = 'ASK_AI_RESULT_V2',
  VOUCHER_CREATE = 'VOUCHER_CREATE',
  VOUCHER_UPDATE = 'VOUCHER_UPDATE',
  VOUCHER_LIST_V2 = 'VOUCHER_LIST_V2',
  VOUCHER_POST_V2 = 'VOUCHER_POST_V2',
  VOUCHER_GET_BY_ID_V2 = 'VOUCHER_GET_BY_ID_V2',
  VOUCHER_DELETE_V2 = 'VOUCHER_DELETE_V2',
  VOUCHER_WAS_READ_V2 = 'VOUCHER_WAS_READ_V2',
  VOUCHER_PUT_V2 = 'VOUCHER_PUT_V2',
  REVERSE_LINE_ITEM_GET_BY_ACCOUNT_V2 = 'REVERSE_LINE_ITEM_GET_BY_ACCOUNT_V2',
  VOUCHER_LIST_GET_BY_ACCOUNT_V2 = 'VOUCHER_LIST_GET_BY_ACCOUNT_V2',
  JOURNAL_GET_BY_ID = 'JOURNAL_GET_BY_ID',
  JOURNAL_LIST = 'JOURNAL_LIST',
  // JOURNAL_UPDATE = 'JOURNAL_UPDATE', // Info: (20240723 - Tzuhan)
  JOURNAL_DELETE = 'JOURNAL_DELETE',
  REPORT_LIST = 'REPORT_LIST',
  REPORT_GET_BY_ID = 'REPORT_GET_BY_ID',
  REPORT_GET_V2 = 'REPORT_GET_V2',
  REPORT_GENERATE = 'REPORT_GENERATE',
  STATUS_INFO_GET = 'STATUS_INFO_GET',
  ACCOUNT_LIST = 'ACCOUNT_LIST',
  FILE_UPLOAD = 'FILE_UPLOAD',
  PUBLIC_FILE_UPLOAD = 'PUBLIC_FILE_UPLOAD',
  FILE_DELETE = 'FILE_DELETE',
  FILE_GET = 'FILE_GET',
  COMPANY_GET_BY_ID = 'COMPANY_GET_BY_ID',
  COMPANY_DELETE = 'COMPANY_DELETE',
  COMPANY_UPDATE = 'COMPANY_UPDATE',
  USER_ROLE_LIST = 'USER_ROLE_LIST',
  USER_CREATE_ROLE = 'USER_CREATE_ROLE',
  USER_SELECT_ROLE = 'USER_SELECT_ROLE',
  CREATE_USER_COMPANY = 'CREATE_USER_COMPANY',
  LIST_USER_COMPANY = 'LIST_USER_COMPANY',
  ROLE_LIST = 'ROLE_LIST',
  ROLE_GET_BY_ID = 'ROLE_GET_BY_ID',
  ROLE_DELETE = 'ROLE_DELETE',
  ROLE_UPDATE = 'ROLE_UPDATE',
  NEWS_LIST = 'NEWS_LIST',
  CREATE_NEWS = 'CREATE_NEWS',
  NEWS_GET_BY_ID = 'NEWS_GET_BY_ID',
  KYC_UPLOAD = 'KYC_UPLOAD',
  ACCOUNT_GET_BY_ID = 'ACCOUNT_GET_BY_ID',
  CREATE_NEW_SUB_ACCOUNT = 'CREATE_NEW_SUB_ACCOUNT',
  UPDATE_ACCOUNT_INFO_BY_ID = 'UPDATE_ACCOUNT_INFO_BY_ID',
  DELETE_ACCOUNT_BY_ID = 'DELETE_ACCOUNT_BY_ID',
  TRANSFER_OWNER = 'TRANSFER_OWNER',
  TODO_LIST = 'TODO_LIST',
  CREATE_TODO = 'CREATE_TODO',
  TODO_GET_BY_ID = 'TODO_GET_BY_ID',
  TODO_UPDATE = 'TODO_UPDATE',
  TODO_DELETE = 'TODO_DELETE',
  PROJECT_LIST = 'PROJECT_LIST',
  CREATE_PROJECT = 'CREATE_PROJECT',
  GET_PROJECT_BY_ID = 'GET_PROJECT_BY_ID',
  UPDATE_PROJECT_BY_ID = 'UPDATE_PROJECT_BY_ID',
  PUBLIC_KEY_GET = 'PUBLIC_KEY_GET',
  ZOD_EXAMPLE = 'ZOD_EXAMPLE', // Info: (20240909 - Murky) This is a Zod example, to demonstrate how to use Zod schema to validate data.
  CERTIFICATE_LIST = 'CERTIFICATE_LIST',
  PUSHER = 'PUSHER',
  ENCRYPT = 'ENCRYPT',
  DECRYPT = 'DECRYPT',
  ASSET_LIST_V2 = 'ASSET_LIST_V2',
  ASSET_GET_BY_ID_V2 = 'ASSET_GET_BY_ID_V2',
  ACCOUNTING_SETTING_GET = 'ACCOUNTING_SETTING_GET',
  ACCOUNTING_SETTING_UPDATE = 'ACCOUNTING_SETTING_UPDATE',
  USER_SETTING_GET = 'USER_SETTING_GET',
  USER_SETTING_UPDATE = 'USER_SETTING_UPDATE',
  USER_ACTION_LOG_LIST = 'USER_ACTION_LOG_LIST',
  CREATE_ASSET_V2 = 'CREATE_ASSET_V2',
  DELETE_ASSET_V2 = 'DELETE_ASSET_V2',
  UPDATE_ASSET_V2 = 'UPDATE_ASSET_V2',
  ASSET_SUGGESTED_NUMBER_GET_BY_TYPE = 'ASSET_SUGGESTED_NUMBER_GET_BY_TYPE',
  TRIAL_BALANCE_LIST = 'TRIAL_BALANCE_LIST',
  IP_LIST = 'IP_LIST',
  ASSET_LIST_EXPORT = 'ASSET_LIST_EXPORT',
  FILE_EXPORT = 'FILE_EXPORT',
}

export enum APIPath {
  AGREE_TO_TERMS = `${apiPrefix}/user/:userId/agreement`,
  CREATE_CHALLENGE = `${apiPrefix}/challenge`,
  SIGN_UP = `${apiPrefix}/sign_up`,
  SIGN_IN = `${apiPrefix}/sign_in`,
  SIGN_OUT = `${apiPrefix}/sign_out`,
  EMAIL = `${apiPrefix}/email`,
  USER_GET_BY_ID = `${apiPrefix}/user/:userId`,
  USER_UPDATE = `${apiPrefix}/user/:userId`,
  USER_PENDING_TASK_GET = `${apiPrefix}/user/:userId/pending_task`,
  COMPANY_PENDING_TASK_GET = `${apiPrefix}/company/:companyId/pending_task`,
  COMPANY_ADD = `${apiPrefix}/company`,
  COMPANY_ADD_BY_INVITATION_CODE = `${apiPrefix}/user/:userId/invitation`,
  COMPANY_SETTING_GET = `${apiPrefixV2}/company/:companyId/setting`,
  COMPANY_SETTING_UPDATE = `${apiPrefixV2}/company/:companyId/setting`,
  CERTIFICATE_LIST_V2 = `${apiPrefixV2}/company/:companyId/certificate`,
  CERTIFICATE_GET_V2 = `${apiPrefixV2}/company/:companyId/certificate/:certificateId`,
  CERTIFICATE_POST_V2 = `${apiPrefixV2}/company/:companyId/certificate`,
  CERTIFICATE_PUT_V2 = `${apiPrefixV2}/company/:companyId/certificate/:certificateId`,
  CERTIFICATE_DELETE_V2 = `${apiPrefixV2}/company/:companyId/certificate/:certificateId`,
  CERTIFICATE_DELETE__MULTIPLE_V2 = `${apiPrefixV2}/company/:companyId/certificate`,
  COUNTERPARTY_LIST = `${apiPrefixV2}/company/:companyId/counterparty`,
  COUNTERPARTY_ADD = `${apiPrefixV2}/company/:companyId/counterparty`,
  COUNTERPARTY_GET_BY_ID = `${apiPrefixV2}/counterparty/:counterpartyId`,
  COUNTERPARTY_UPDATE = `${apiPrefixV2}/counterparty/:counterpartyId`,
  COUNTERPARTY_DELETE = `${apiPrefixV2}/counterparty/:counterpartyId`,
  PROFIT_GET_INSIGHT = `${apiPrefix}/company/:companyId/profit_insight`,
  INCOME_EXPENSE_GET_TREND_IN_PERIOD = `${apiPrefix}/company/:companyId/income_expense_trend`,
  LABOR_COST_CHART = `${apiPrefix}/company/:companyId/labor_cost_chart`,
  PROJECT_LIST_PROGRESS = `${apiPrefix}/company/:companyId/project_progress`,
  PROJECT_LIST_PROFIT_COMPARISON = `${apiPrefix}/company/:companyId/profit_comparison`,
  ASSET_MANAGEMENT_LIST = `${apiPrefix}/company/:companyId/asset_management`,
  ASSET_MANAGEMENT_ADD = `${apiPrefix}/company/:companyId/asset_management`,
  ASSET_MANAGEMENT_GET_BY_ID = `${apiPrefix}/company/:companyId/asset_management/:assetId`,
  ASSET_MANAGEMENT_UPDATE = `${apiPrefix}/company/:companyId/asset_management/:assetId`,
  OCR_UPLOAD = `${apiPrefix}/company/:companyId/ocr`,
  OCR_DELETE = `${apiPrefix}/company/:companyId/ocr/:resultId`,
  OCR_RESULT_GET_BY_ID = `${apiPrefix}/company/:companyId/ocr/:resultId`,
  OCR_LIST = `${apiPrefix}/company/:companyId/ocr`,
  INVOICE_CREATE = `${apiPrefix}/company/:companyId/invoice`,
  INVOICE_UPDATE = `${apiPrefix}/company/:companyId/invoice/:invoiceId`,
  INVOICE_GET_BY_ID = `${apiPrefix}/company/:companyId/invoice/:invoiceId`,
  ASK_AI_STATUS = `${apiPrefix}/company/:companyId/ask_ai/:resultId/status`,
  ASK_AI_RESULT = `${apiPrefix}/company/:companyId/ask_ai/:resultId`,
  ASK_AI_V2 = `${apiPrefixV2}/company/:companyId/ask_ai`,
  ASK_AI_RESULT_V2 = `${apiPrefixV2}/company/:companyId/ask_ai/:resultId`,
  VOUCHER_CREATE = `${apiPrefix}/company/:companyId/voucher`,
  VOUCHER_UPDATE = `${apiPrefix}/company/:companyId/voucher/:voucherId`,
  VOUCHER_LIST_V2 = `${apiPrefixV2}/company/:companyId/voucher`,
  VOUCHER_POST_V2 = `${apiPrefixV2}/company/:companyId/voucher`,
  VOUCHER_GET_BY_ID_V2 = `${apiPrefixV2}/company/:companyId/voucher/:voucherId`,
  VOUCHER_PUT_V2 = `${apiPrefixV2}/company/:companyId/voucher/:voucherId`,
  REVERSE_LINE_ITEM_GET_BY_ACCOUNT_V2 = `${apiPrefixV2}/company/:companyId/account/:accountId/lineitem`,
  VOUCHER_LIST_GET_BY_ACCOUNT_V2 = `${apiPrefixV2}/company/:companyId/account/:accountId/voucher`,
  VOUCHER_DELETE_V2 = `${apiPrefixV2}/company/:companyId/voucher/account/:accountId`,
  VOUCHER_WAS_READ_V2 = `${apiPrefixV2}/company/:companyId/voucher/read`,
  JOURNAL_GET_BY_ID = `${apiPrefix}/company/:companyId/journal/:journalId`,
  JOURNAL_LIST = `${apiPrefix}/company/:companyId/journal`,
  // JOURNAL_UPDATE = `${apiPrefix}/company/:companyId/journal/:journalId`, // Info: (20240720 - Tzuhan)
  JOURNAL_DELETE = `${apiPrefix}/company/:companyId/journal/:journalId`,
  REPORT_LIST = `${apiPrefix}/company/:companyId/report`,
  REPORT_GET_BY_ID = `${apiPrefix}/company/:companyId/report/:reportId`,
  REPORT_GET_V2 = `${apiPrefixV2}/company/:companyId/report`,
  REPORT_GENERATE = `${apiPrefix}/company/:companyId/report`,
  STATUS_INFO_GET = `${apiPrefixV2}/status_info`,
  ACCOUNT_LIST = `${apiPrefix}/company/:companyId/account`,
  FILE_UPLOAD = `${apiPrefix}/company/:companyId/file`,
  PUBLIC_FILE_UPLOAD = `${apiPrefixV2}/upload`,
  FILE_DELETE = `${apiPrefix}/company/:companyId/file/:fileId`,
  FILE_GET = `${apiPrefix}/company/:companyId/file/:fileId`,
  COMPANY_GET_BY_ID = `${apiPrefix}/company/:companyId`,
  COMPANY_DELETE = `${apiPrefix}/company/:companyId`,
  COMPANY_UPDATE = `${apiPrefix}/company/:companyId`,
  USER_ROLE_LIST = `${apiPrefixV2}/user/:userId/role`,
  USER_CREATE_ROLE = `${apiPrefixV2}/user/:userId/role`,
  USER_SELECT_ROLE = `${apiPrefixV2}/user/:userId/selected_role`,
  CREATE_USER_COMPANY = `${apiPrefixV2}/user/:userId/company`,
  LIST_USER_COMPANY = `${apiPrefixV2}/user/:userId/company`,
  COMPANY_SELECT = `${apiPrefixV2}/user/:userId/selected_company`,
  ROLE_LIST = `${apiPrefixV2}/role`,
  ROLE_GET_BY_ID = `${apiPrefixV2}/role/:roleId`,
  ROLE_DELETE = `${apiPrefixV2}/role/:roleId`,
  ROLE_UPDATE = `${apiPrefixV2}/role/:roleId`,
  NEWS_LIST = `${apiPrefixV2}/news`,
  CREATE_NEWS = `${apiPrefixV2}/news`,
  NEWS_GET_BY_ID = `${apiPrefixV2}/news/:newsId`,
  KYC_UPLOAD = `${apiPrefixV2}/company/:companyId/kyc`,
  ACCOUNT_GET_BY_ID = `${apiPrefix}/company/:companyId/account/:accountId`,
  CREATE_NEW_SUB_ACCOUNT = `${apiPrefix}/company/:companyId/account`,
  UPDATE_ACCOUNT_INFO_BY_ID = `${apiPrefix}/company/:companyId/account/:accountId`,
  DELETE_ACCOUNT_BY_ID = `${apiPrefix}/company/:companyId/account/:accountId`,
  TRANSFER_OWNER = `${apiPrefix}/company/:companyId/transfer_owner`,
  TODO_LIST = `${apiPrefixV2}/user/:userId/todo`,
  CREATE_TODO = `${apiPrefixV2}/user/:userId/todo`,
  TODO_GET_BY_ID = `${apiPrefixV2}/todo/:todoId`,
  TODO_UPDATE = `${apiPrefixV2}/todo/:todoId`,
  TODO_DELETE = `${apiPrefixV2}/todo/:todoId`,
  PROJECT_LIST = `${apiPrefix}/company/:companyId/project`,
  CREATE_PROJECT = `${apiPrefix}/company/:companyId/project`,
  GET_PROJECT_BY_ID = `${apiPrefix}/company/:companyId/project/:projectId`,
  UPDATE_PROJECT_BY_ID = `${apiPrefix}/company/:companyId/project/:projectId`,
  PUBLIC_KEY_GET = `${apiPrefix}/company/:companyId/public_key`,
  ZOD_EXAMPLE = `${apiPrefix}/company/zod`, // Info: (20240909 - Murky) This is a Zod example, to demonstrate how to use Zod schema to validate data.
  CERTIFICATE_LIST = `${apiPrefix}/company/:companyId/certificate`,
  PUSHER = `${apiPrefixV2}/pusher`,
  ENCRYPT = `${apiPrefixV2}/encrypt`,
  DECRYPT = `${apiPrefixV2}/decrypt`,
  ASSET_LIST_V2 = `${apiPrefixV2}/company/:companyId/asset`,
  ASSET_GET_BY_ID_V2 = `${apiPrefixV2}/company/:companyId/asset/:assetId`,
  ACCOUNTING_SETTING_GET = `${apiPrefixV2}/company/:companyId/accounting_setting`,
  ACCOUNTING_SETTING_UPDATE = `${apiPrefixV2}/company/:companyId/accounting_setting`,
  USER_SETTING_GET = `${apiPrefixV2}/user/:userId/setting`,
  USER_SETTING_UPDATE = `${apiPrefixV2}/user/:userId/setting`,
  USER_ACTION_LOG_LIST = `${apiPrefixV2}/user/:userId/action_log`,
  CREATE_ASSET_V2 = `${apiPrefixV2}/company/:companyId/asset`,
  DELETE_ASSET_V2 = `${apiPrefixV2}/company/:companyId/asset/:assetId`,
  UPDATE_ASSET_V2 = `${apiPrefixV2}/company/:companyId/asset/:assetId`,
  ASSET_SUGGESTED_NUMBER_GET_BY_TYPE = `${apiPrefixV2}/company/:companyId/asset/suggested_number`,
  TRIAL_BALANCE_LIST = `${apiPrefixV2}/company/:companyId/trial_balance`,
  IP_LIST = `${apiPrefixV2}/user/:userId/ip`,
  ASSET_LIST_EXPORT = `${apiPrefixV2}/company/:companyId/asset/export`,
  FILE_EXPORT = `${apiPrefixV2}/company/:companyId/asset/export`
}
const createConfig = ({
  name,
  method,
  path,
  input = initialInput,
  output = {},
  useWorker = false,
}: {
  name: IAPIName;
  method: HttpMethod;
  path: APIPath;
  input?: IAPIInput;
  output?: IAPIOutput;
  useWorker?: boolean;
}): IAPIConfig => ({
  name,
  method,
  path,
  input,
  output,
  useWorker,
});

export const APIConfig: Record<IAPIName, IAPIConfig> = {
  [APIName.AGREE_TO_TERMS]: createConfig({
    name: APIName.AGREE_TO_TERMS,
    method: HttpMethod.POST,
    path: APIPath.AGREE_TO_TERMS,
  }),
  [APIName.CREATE_CHALLENGE]: createConfig({
    name: APIName.CREATE_CHALLENGE,
    method: HttpMethod.GET,
    path: APIPath.CREATE_CHALLENGE,
  }),
  [APIName.SIGN_UP]: createConfig({
    name: APIName.SIGN_UP,
    method: HttpMethod.POST,
    path: APIPath.SIGN_UP,
  }),
  [APIName.SIGN_IN]: createConfig({
    name: APIName.SIGN_IN,
    method: HttpMethod.POST,
    path: APIPath.SIGN_IN,
  }),
  [APIName.SIGN_OUT]: createConfig({
    name: APIName.SIGN_OUT,
    method: HttpMethod.POST,
    path: APIPath.SIGN_OUT,
  }),
  [APIName.EMAIL]: createConfig({
    name: APIName.EMAIL,
    method: HttpMethod.POST,
    path: APIPath.EMAIL,
  }),
  [APIName.USER_GET_BY_ID]: createConfig({
    name: APIName.USER_GET_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.USER_GET_BY_ID,
  }),
  [APIName.USER_PENDING_TASK_GET]: createConfig({
    name: APIName.USER_PENDING_TASK_GET,
    method: HttpMethod.GET,
    path: APIPath.USER_PENDING_TASK_GET,
  }),
  [APIName.COMPANY_PENDING_TASK_GET]: createConfig({
    name: APIName.COMPANY_PENDING_TASK_GET,
    method: HttpMethod.GET,
    path: APIPath.COMPANY_PENDING_TASK_GET,
  }),
  [APIName.OCR_RESULT_GET_BY_ID]: createConfig({
    name: APIName.OCR_RESULT_GET_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.OCR_RESULT_GET_BY_ID,
  }),
  [APIName.OCR_UPLOAD]: createConfig({
    name: APIName.OCR_UPLOAD,
    method: HttpMethod.POST,
    path: APIPath.OCR_UPLOAD,
  }),
  [APIName.OCR_DELETE]: createConfig({
    name: APIName.OCR_DELETE,
    method: HttpMethod.DELETE,
    path: APIPath.OCR_DELETE,
  }),
  [APIName.INVOICE_CREATE]: createConfig({
    name: APIName.INVOICE_CREATE,
    method: HttpMethod.POST,
    path: APIPath.INVOICE_CREATE,
  }),
  [APIName.INVOICE_UPDATE]: createConfig({
    name: APIName.INVOICE_UPDATE,
    method: HttpMethod.PUT,
    path: APIPath.INVOICE_UPDATE,
  }),
  [APIName.INVOICE_GET_BY_ID]: createConfig({
    name: APIName.INVOICE_GET_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.INVOICE_GET_BY_ID,
  }),
  [APIName.ASK_AI_STATUS]: createConfig({
    name: APIName.ASK_AI_STATUS,
    method: HttpMethod.GET,
    path: APIPath.ASK_AI_STATUS,
  }),
  [APIName.ASK_AI_RESULT]: createConfig({
    name: APIName.ASK_AI_RESULT,
    method: HttpMethod.GET,
    path: APIPath.ASK_AI_RESULT,
  }),
  [APIName.VOUCHER_CREATE]: createConfig({
    name: APIName.VOUCHER_CREATE,
    method: HttpMethod.POST,
    path: APIPath.VOUCHER_CREATE,
  }),
  [APIName.VOUCHER_UPDATE]: createConfig({
    name: APIName.VOUCHER_UPDATE,
    method: HttpMethod.PUT,
    path: APIPath.VOUCHER_UPDATE,
  }),
  [APIName.JOURNAL_LIST]: createConfig({
    name: APIName.JOURNAL_LIST,
    method: HttpMethod.GET,
    path: APIPath.JOURNAL_LIST,
  }),
  [APIName.JOURNAL_GET_BY_ID]: createConfig({
    name: APIName.JOURNAL_GET_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.JOURNAL_GET_BY_ID,
  }),
  USER_UPDATE: createConfig({
    name: APIName.USER_UPDATE,
    method: HttpMethod.PUT,
    path: APIPath.USER_UPDATE,
  }),
  LIST_USER_COMPANY: createConfig({
    name: APIName.LIST_USER_COMPANY,
    method: HttpMethod.GET,
    path: APIPath.LIST_USER_COMPANY,
  }),
  COMPANY_ADD: createConfig({
    name: APIName.COMPANY_ADD,
    method: HttpMethod.POST,
    path: APIPath.COMPANY_ADD,
  }),
  COMPANY_ADD_BY_INVITATION_CODE: createConfig({
    name: APIName.COMPANY_ADD_BY_INVITATION_CODE,
    method: HttpMethod.PUT,
    path: APIPath.COMPANY_ADD_BY_INVITATION_CODE,
  }),
  PROFIT_GET_INSIGHT: createConfig({
    name: APIName.PROFIT_GET_INSIGHT,
    method: HttpMethod.GET,
    path: APIPath.PROFIT_GET_INSIGHT,
  }),
  INCOME_EXPENSE_GET_TREND_IN_PERIOD: createConfig({
    name: APIName.INCOME_EXPENSE_GET_TREND_IN_PERIOD,
    method: HttpMethod.GET,
    path: APIPath.INCOME_EXPENSE_GET_TREND_IN_PERIOD,
  }),
  PROJECT_LIST_PROGRESS: createConfig({
    name: APIName.PROJECT_LIST_PROGRESS,
    method: HttpMethod.GET,
    path: APIPath.PROJECT_LIST_PROGRESS,
  }),
  PROJECT_LIST_PROFIT_COMPARISON: createConfig({
    name: APIName.PROJECT_LIST_PROFIT_COMPARISON,
    method: HttpMethod.GET,
    path: APIPath.PROJECT_LIST_PROFIT_COMPARISON,
  }),
  ASSET_MANAGEMENT_LIST: createConfig({
    name: APIName.ASSET_MANAGEMENT_LIST,
    method: HttpMethod.GET,
    path: APIPath.ASSET_MANAGEMENT_LIST,
  }),
  ASSET_MANAGEMENT_ADD: createConfig({
    name: APIName.ASSET_MANAGEMENT_ADD,
    method: HttpMethod.POST,
    path: APIPath.ASSET_MANAGEMENT_ADD,
  }),
  ASSET_MANAGEMENT_GET_BY_ID: createConfig({
    name: APIName.ASSET_MANAGEMENT_GET_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.ASSET_MANAGEMENT_GET_BY_ID,
  }),
  ASSET_MANAGEMENT_UPDATE: createConfig({
    name: APIName.ASSET_MANAGEMENT_UPDATE,
    method: HttpMethod.PUT,
    path: APIPath.ASSET_MANAGEMENT_UPDATE,
  }),
  // Info: (20240720 - Tzuhan)
  // JOURNAL_UPDATE: createConfig({
  //   name: APIName.JOURNAL_UPDATE,
  //   method: HttpMethod.PUT,
  //   path: APIPath.JOURNAL_UPDATE,
  // }),
  JOURNAL_DELETE: createConfig({
    name: APIName.JOURNAL_DELETE,
    method: HttpMethod.DELETE,
    path: APIPath.JOURNAL_DELETE,
  }),
  [APIName.COMPANY_SELECT]: createConfig({
    name: APIName.COMPANY_SELECT,
    method: HttpMethod.PUT,
    path: APIPath.COMPANY_SELECT,
  }),
  [APIName.REPORT_LIST]: createConfig({
    name: APIName.REPORT_LIST,
    method: HttpMethod.GET,
    path: APIPath.REPORT_LIST,
  }),
  [APIName.REPORT_GET_BY_ID]: createConfig({
    name: APIName.REPORT_GET_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.REPORT_GET_BY_ID,
  }),
  [APIName.REPORT_GENERATE]: createConfig({
    name: APIName.REPORT_GENERATE,
    method: HttpMethod.POST,
    path: APIPath.REPORT_GENERATE,
  }),
  [APIName.LABOR_COST_CHART]: createConfig({
    name: APIName.LABOR_COST_CHART,
    method: HttpMethod.GET,
    path: APIPath.LABOR_COST_CHART,
  }),
  [APIName.OCR_LIST]: createConfig({
    name: APIName.OCR_LIST,
    method: HttpMethod.GET,
    path: APIPath.OCR_LIST,
  }),
  [APIName.STATUS_INFO_GET]: createConfig({
    name: APIName.STATUS_INFO_GET,
    method: HttpMethod.GET,
    path: APIPath.STATUS_INFO_GET,
  }),
  [APIName.ACCOUNT_LIST]: createConfig({
    name: APIName.ACCOUNT_LIST,
    method: HttpMethod.GET,
    path: APIPath.ACCOUNT_LIST,
  }),
  [APIName.FILE_UPLOAD]: createConfig({
    name: APIName.FILE_UPLOAD,
    method: HttpMethod.POST,
    path: APIPath.FILE_UPLOAD,
  }),
  [APIName.PUBLIC_FILE_UPLOAD]: createConfig({
    name: APIName.PUBLIC_FILE_UPLOAD,
    method: HttpMethod.POST,
    path: APIPath.PUBLIC_FILE_UPLOAD,
  }),
  [APIName.FILE_DELETE]: createConfig({
    name: APIName.FILE_DELETE,
    method: HttpMethod.DELETE,
    path: APIPath.FILE_DELETE,
  }),
  [APIName.FILE_GET]: createConfig({
    name: APIName.FILE_GET,
    method: HttpMethod.GET,
    path: APIPath.FILE_GET,
  }),
  [APIName.COMPANY_GET_BY_ID]: createConfig({
    name: APIName.COMPANY_GET_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.COMPANY_GET_BY_ID,
  }),
  [APIName.COMPANY_UPDATE]: createConfig({
    name: APIName.COMPANY_UPDATE,
    method: HttpMethod.PUT,
    path: APIPath.COMPANY_UPDATE,
  }),
  [APIName.COMPANY_DELETE]: createConfig({
    name: APIName.COMPANY_DELETE,
    method: HttpMethod.DELETE,
    path: APIPath.COMPANY_DELETE,
  }),
  [APIName.COMPANY_SETTING_GET]: createConfig({
    name: APIName.COMPANY_SETTING_GET,
    method: HttpMethod.GET,
    path: APIPath.COMPANY_SETTING_GET,
  }),
  [APIName.COMPANY_SETTING_UPDATE]: createConfig({
    name: APIName.COMPANY_SETTING_UPDATE,
    method: HttpMethod.PUT,
    path: APIPath.COMPANY_SETTING_UPDATE,
  }),
  [APIName.ROLE_LIST]: createConfig({
    name: APIName.ROLE_LIST,
    method: HttpMethod.GET,
    path: APIPath.ROLE_LIST,
  }),
  [APIName.ROLE_GET_BY_ID]: createConfig({
    name: APIName.ROLE_GET_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.ROLE_GET_BY_ID,
  }),
  [APIName.USER_ROLE_LIST]: createConfig({
    name: APIName.USER_ROLE_LIST,
    method: HttpMethod.GET,
    path: APIPath.USER_ROLE_LIST,
  }),
  [APIName.USER_CREATE_ROLE]: createConfig({
    name: APIName.USER_CREATE_ROLE,
    method: HttpMethod.POST,
    path: APIPath.USER_CREATE_ROLE,
  }),
  [APIName.USER_SELECT_ROLE]: createConfig({
    name: APIName.USER_SELECT_ROLE,
    method: HttpMethod.PUT,
    path: APIPath.USER_SELECT_ROLE,
  }),
  [APIName.CREATE_USER_COMPANY]: createConfig({
    name: APIName.CREATE_USER_COMPANY,
    method: HttpMethod.POST,
    path: APIPath.CREATE_USER_COMPANY,
  }),
  [APIName.ROLE_DELETE]: createConfig({
    name: APIName.ROLE_DELETE,
    method: HttpMethod.DELETE,
    path: APIPath.ROLE_DELETE,
  }),
  [APIName.ROLE_UPDATE]: createConfig({
    name: APIName.ROLE_UPDATE,
    method: HttpMethod.PUT,
    path: APIPath.ROLE_UPDATE,
  }),
  [APIName.NEWS_LIST]: createConfig({
    name: APIName.NEWS_LIST,
    method: HttpMethod.GET,
    path: APIPath.NEWS_LIST,
  }),
  [APIName.CREATE_NEWS]: createConfig({
    name: APIName.CREATE_NEWS,
    method: HttpMethod.POST,
    path: APIPath.CREATE_NEWS,
  }),
  [APIName.NEWS_GET_BY_ID]: createConfig({
    name: APIName.NEWS_GET_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.NEWS_GET_BY_ID,
  }),
  [APIName.KYC_UPLOAD]: createConfig({
    name: APIName.KYC_UPLOAD,
    method: HttpMethod.POST,
    path: APIPath.KYC_UPLOAD,
  }),
  [APIName.ACCOUNT_GET_BY_ID]: createConfig({
    name: APIName.ACCOUNT_GET_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.ACCOUNT_GET_BY_ID,
  }),
  [APIName.CREATE_NEW_SUB_ACCOUNT]: createConfig({
    name: APIName.CREATE_NEW_SUB_ACCOUNT,
    method: HttpMethod.POST,
    path: APIPath.CREATE_NEW_SUB_ACCOUNT,
  }),
  [APIName.UPDATE_ACCOUNT_INFO_BY_ID]: createConfig({
    name: APIName.UPDATE_ACCOUNT_INFO_BY_ID,
    method: HttpMethod.PUT,
    path: APIPath.UPDATE_ACCOUNT_INFO_BY_ID,
  }),
  [APIName.DELETE_ACCOUNT_BY_ID]: createConfig({
    name: APIName.DELETE_ACCOUNT_BY_ID,
    method: HttpMethod.DELETE,
    path: APIPath.DELETE_ACCOUNT_BY_ID,
  }),
  [APIName.TRANSFER_OWNER]: createConfig({
    name: APIName.TRANSFER_OWNER,
    method: HttpMethod.PUT,
    path: APIPath.TRANSFER_OWNER,
  }),
  [APIName.TODO_LIST]: createConfig({
    name: APIName.TODO_LIST,
    method: HttpMethod.GET,
    path: APIPath.TODO_LIST,
  }),
  [APIName.CREATE_TODO]: createConfig({
    name: APIName.CREATE_TODO,
    method: HttpMethod.POST,
    path: APIPath.CREATE_TODO,
  }),
  [APIName.TODO_GET_BY_ID]: createConfig({
    name: APIName.TODO_GET_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.TODO_GET_BY_ID,
  }),
  [APIName.TODO_UPDATE]: createConfig({
    name: APIName.TODO_UPDATE,
    method: HttpMethod.PUT,
    path: APIPath.TODO_UPDATE,
  }),
  [APIName.TODO_DELETE]: createConfig({
    name: APIName.TODO_DELETE,
    method: HttpMethod.DELETE,
    path: APIPath.TODO_DELETE,
  }),
  [APIName.PROJECT_LIST]: createConfig({
    name: APIName.PROJECT_LIST,
    method: HttpMethod.GET,
    path: APIPath.PROJECT_LIST,
  }),
  [APIName.CREATE_PROJECT]: createConfig({
    name: APIName.CREATE_PROJECT,
    method: HttpMethod.POST,
    path: APIPath.CREATE_PROJECT,
  }),
  [APIName.GET_PROJECT_BY_ID]: createConfig({
    name: APIName.GET_PROJECT_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.GET_PROJECT_BY_ID,
  }),
  [APIName.UPDATE_PROJECT_BY_ID]: createConfig({
    name: APIName.UPDATE_PROJECT_BY_ID,
    method: HttpMethod.PUT,
    path: APIPath.UPDATE_PROJECT_BY_ID,
  }),
  [APIName.PUBLIC_KEY_GET]: createConfig({
    name: APIName.PUBLIC_KEY_GET,
    method: HttpMethod.GET,
    path: APIPath.PUBLIC_KEY_GET,
  }),
  [APIName.CERTIFICATE_LIST]: createConfig({
    name: APIName.CERTIFICATE_LIST,
    method: HttpMethod.GET,
    path: APIPath.CERTIFICATE_LIST,
  }),
  [APIName.PUSHER]: createConfig({
    name: APIName.PUSHER,
    method: HttpMethod.POST,
    path: APIPath.PUSHER,
  }),
  [APIName.ENCRYPT]: createConfig({
    name: APIName.ENCRYPT,
    method: HttpMethod.POST,
    path: APIPath.ENCRYPT,
  }),
  [APIName.DECRYPT]: createConfig({
    name: APIName.DECRYPT,
    method: HttpMethod.POST,
    path: APIPath.DECRYPT,
  }),
  [APIName.VOUCHER_GET_BY_ID_V2]: createConfig({
    name: APIName.VOUCHER_GET_BY_ID_V2,
    method: HttpMethod.GET,
    path: APIPath.VOUCHER_GET_BY_ID_V2,
  }),
  /**
   * Info: (20241007 - Murky)
   * Below is v2 API
   */
  [APIName.REPORT_GET_V2]: createConfig({
    name: APIName.REPORT_GET_V2,
    method: HttpMethod.GET,
    path: APIPath.REPORT_GET_V2,
  }),
  [APIName.ASSET_GET_BY_ID_V2]: createConfig({
    name: APIName.ASSET_GET_BY_ID_V2,
    method: HttpMethod.GET,
    path: APIPath.ASSET_GET_BY_ID_V2,
  }),
  [APIName.VOUCHER_LIST_V2]: createConfig({
    name: APIName.VOUCHER_LIST_V2,
    method: HttpMethod.GET,
    path: APIPath.VOUCHER_LIST_V2,
  }),
  [APIName.REVERSE_LINE_ITEM_GET_BY_ACCOUNT_V2]: createConfig({
    // Info: (20241106 - Murky) @Julian 這個是Reverse Voucher的時後可以get出account list的api
    name: APIName.REVERSE_LINE_ITEM_GET_BY_ACCOUNT_V2,
    method: HttpMethod.GET,
    path: APIPath.REVERSE_LINE_ITEM_GET_BY_ACCOUNT_V2,
  }),
  [APIName.VOUCHER_LIST_GET_BY_ACCOUNT_V2]: createConfig({
    name: APIName.VOUCHER_LIST_GET_BY_ACCOUNT_V2,
    method: HttpMethod.GET,
    path: APIPath.VOUCHER_LIST_GET_BY_ACCOUNT_V2,
  }),
  [APIName.ASK_AI_V2]: createConfig({
    name: APIName.ASK_AI_V2,
    method: HttpMethod.POST,
    path: APIPath.ASK_AI_V2,
  }),
  [APIName.ASK_AI_RESULT_V2]: createConfig({
    name: APIName.ASK_AI_RESULT_V2,
    method: HttpMethod.GET,
    path: APIPath.ASK_AI_RESULT_V2,
  }),
  [APIName.ACCOUNTING_SETTING_GET]: createConfig({
    name: APIName.ACCOUNTING_SETTING_GET,
    method: HttpMethod.GET,
    path: APIPath.ACCOUNTING_SETTING_GET,
  }),
  [APIName.ACCOUNTING_SETTING_UPDATE]: createConfig({
    name: APIName.ACCOUNTING_SETTING_UPDATE,
    method: HttpMethod.PUT,
    path: APIPath.ACCOUNTING_SETTING_UPDATE,
  }),
  [APIName.CERTIFICATE_LIST_V2]: createConfig({
    name: APIName.CERTIFICATE_LIST_V2,
    method: HttpMethod.GET,
    path: APIPath.CERTIFICATE_LIST_V2,
  }),
  [APIName.CERTIFICATE_GET_V2]: createConfig({
    name: APIName.CERTIFICATE_GET_V2,
    method: HttpMethod.GET,
    path: APIPath.CERTIFICATE_GET_V2,
  }),
  [APIName.CERTIFICATE_POST_V2]: createConfig({
    name: APIName.CERTIFICATE_POST_V2,
    method: HttpMethod.POST,
    path: APIPath.CERTIFICATE_POST_V2,
  }),
  [APIName.CERTIFICATE_PUT_V2]: createConfig({
    name: APIName.CERTIFICATE_PUT_V2,
    method: HttpMethod.PUT,
    path: APIPath.CERTIFICATE_PUT_V2,
  }),
  [APIName.CERTIFICATE_DELETE_V2]: createConfig({
    name: APIName.CERTIFICATE_DELETE_V2,
    method: HttpMethod.DELETE,
    path: APIPath.CERTIFICATE_PUT_V2,
  }),
  // Info: (20241028 - Tzuhan) @Murky, 需要新增這個 API 用來在 certificate list 一次性刪除多張certificate
  [APIName.CERTIFICATE_DELETE__MULTIPLE_V2]: createConfig({
    name: APIName.CERTIFICATE_DELETE__MULTIPLE_V2,
    method: HttpMethod.DELETE,
    path: APIPath.CERTIFICATE_DELETE__MULTIPLE_V2,
  }),
  [APIName.COUNTERPARTY_LIST]: createConfig({
    name: APIName.COUNTERPARTY_LIST,
    method: HttpMethod.GET,
    path: APIPath.COUNTERPARTY_LIST,
  }),
  [APIName.COUNTERPARTY_ADD]: createConfig({
    name: APIName.COUNTERPARTY_ADD,
    method: HttpMethod.POST,
    path: APIPath.COUNTERPARTY_ADD,
  }),
  [APIName.COUNTERPARTY_GET_BY_ID]: createConfig({
    name: APIName.COUNTERPARTY_GET_BY_ID,
    method: HttpMethod.GET,
    path: APIPath.COUNTERPARTY_GET_BY_ID,
  }),
  [APIName.COUNTERPARTY_UPDATE]: createConfig({
    name: APIName.COUNTERPARTY_UPDATE,
    method: HttpMethod.PUT,
    path: APIPath.COUNTERPARTY_UPDATE,
  }),
  [APIName.COUNTERPARTY_DELETE]: createConfig({
    name: APIName.COUNTERPARTY_DELETE,
    method: HttpMethod.DELETE,
    path: APIPath.COUNTERPARTY_DELETE,
  }),
  [APIName.ASSET_LIST_V2]: createConfig({
    name: APIName.ASSET_LIST_V2,
    method: HttpMethod.GET,
    path: APIPath.ASSET_LIST_V2,
  }),
  [APIName.USER_SETTING_GET]: createConfig({
    name: APIName.USER_SETTING_GET,
    method: HttpMethod.GET,
    path: APIPath.USER_SETTING_GET,
  }),
  [APIName.USER_SETTING_UPDATE]: createConfig({
    name: APIName.USER_SETTING_UPDATE,
    method: HttpMethod.PUT,
    path: APIPath.USER_SETTING_UPDATE,
  }),
  [APIName.USER_ACTION_LOG_LIST]: createConfig({
    name: APIName.USER_ACTION_LOG_LIST,
    method: HttpMethod.GET,
    path: APIPath.USER_ACTION_LOG_LIST,
  }),
  [APIName.CREATE_ASSET_V2]: createConfig({
    name: APIName.CREATE_ASSET_V2,
    method: HttpMethod.POST,
    path: APIPath.CREATE_ASSET_V2,
  }),
  [APIName.DELETE_ASSET_V2]: createConfig({
    name: APIName.DELETE_ASSET_V2,
    method: HttpMethod.DELETE,
    path: APIPath.DELETE_ASSET_V2,
  }),
  [APIName.UPDATE_ASSET_V2]: createConfig({
    name: APIName.UPDATE_ASSET_V2,
    method: HttpMethod.PUT,
    path: APIPath.UPDATE_ASSET_V2,
  }),
  [APIName.VOUCHER_DELETE_V2]: createConfig({
    name: APIName.VOUCHER_DELETE_V2,
    method: HttpMethod.DELETE,
    path: APIPath.VOUCHER_DELETE_V2,
  }),
  [APIName.ASSET_SUGGESTED_NUMBER_GET_BY_TYPE]: createConfig({
    name: APIName.ASSET_SUGGESTED_NUMBER_GET_BY_TYPE,
    method: HttpMethod.GET,
    path: APIPath.ASSET_SUGGESTED_NUMBER_GET_BY_TYPE,
  }),
  [APIName.TRIAL_BALANCE_LIST]: createConfig({
    name: APIName.TRIAL_BALANCE_LIST,
    method: HttpMethod.GET,
    path: APIPath.TRIAL_BALANCE_LIST,
  }),
  [APIName.IP_LIST]: createConfig({
    name: APIName.IP_LIST,
    method: HttpMethod.GET,
    path: APIPath.IP_LIST,
  }),
  [APIName.ASSET_LIST_EXPORT]: createConfig({
    name: APIName.ASSET_LIST_EXPORT,
    method: HttpMethod.GET,
    path: APIPath.ASSET_LIST_EXPORT,
  }),
  [APIName.FILE_EXPORT]: createConfig({
    name: APIName.FILE_EXPORT,
    method: HttpMethod.POST,
    path: APIPath.FILE_EXPORT,
  }),
};
