import { server } from '@passwordless-id/webauthn';
import type { NextApiRequest, NextApiResponse } from 'next';

type Data = {
  message: string;
};

export default async function handler(req: NextApiRequest, res: NextApiResponse<Data>) {
  try {
    if (req.method !== 'POST') {
      throw new Error('Only POST requests are allowed');
    }

    const { registration } = req.body;
    // eslint-disable-next-line no-console
    console.log('req.body', req.body);

    const expected = {
      challenge: 'RklETzIuVEVTVC5yZWctMTcxMjE3Njg1MC1oZWxsbw', // whatever was randomly generated by the server
      origin: 'http://localhost:3000',
    };
    const registrationParsed = await server.verifyRegistration(registration, expected);

    // eslint-disable-next-line no-console
    console.log('registrationParsed', registrationParsed);

    // if (!user) {
    //   throw new Error('User not found');
    // }

    // const isMatch = await bcrypt.compare(password, user.password);
    // if (!isMatch) {
    //   throw new Error('Invalid credentials');
    // }

    res.status(200).json({ message: 'token' });
  } catch (error) {
    // TODO: handle authentification error (20240403 - Shirley)
    // eslint-disable-next-line no-console
    console.log('error', error);
    res.status(400).json({ message: 'error' });
  }
}
